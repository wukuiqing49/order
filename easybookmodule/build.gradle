apply plugin: 'com.android.library'


android {
    compileSdkVersion 29

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 29
        versionCode 250
        versionName "2.50"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    task makeJar(type: Copy){
        delete 'build/libs/easybook.jar'
        from('build/intermediates/intermediate-jars/debug/')
        into('build/libs/')
        exclude('res.jar')
        rename ('classes.jar', 'easybook.jar')
    }

    dataBinding {
        enabled true
    }

}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'androidx.annotation:annotation:1.1.0'
    compileOnly 'com.squareup.okhttp3:okhttp:4.0.1'
    compileOnly 'com.google.code.gson:gson:2.8.5'
}

// 指定编码
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// 打包源码
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}

task javadoc(type: Javadoc) {
    failOnError  false
    source = android.sourceSets.main.java.sourceFiles
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
    classpath += configurations.compile
}

//// 制作文档(Javadoc)
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
//
//artifacts {
//    archives sourcesJar
//    archives javadocJar
//}